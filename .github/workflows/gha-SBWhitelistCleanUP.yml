name: Nightly SB Whitelist Cleanup

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

permissions:
  actions: read
  checks: write
  contents: read
  id-token: write
  pull-requests: read
  statuses: read

jobs:
  clean-up:
    runs-on: ubuntu-latest
    env:
      AZURE_STORAGE_ACCOUNT: poc2sbwhitelist2 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id:     ${{ secrets.CLIENTID }}
          tenant-id:     ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.subscriptionId }}

      - name: Process all queued IPs
        run: |
          # install jq just for reliable JSON parsing
          sudo apt-get update && sudo apt-get install -y jq

          # peek so you can see what's in there
          echo ">> Queue peek (up to 5 msgs):"
          az storage queue message peek \
            --account-name $AZURE_STORAGE_ACCOUNT \
            --queue-name sb-whitelist \
            --num-messages 5 \
            --auth-mode login \
            -o table

          while true; do
            # 1) pull one message and make it invisible for 30s
            MSG_JSON=$(az storage queue message get \
               --account-name $AZURE_STORAGE_ACCOUNT \
               --queue-name sb-whitelist \
               --num-messages 1 \
               --visibility-timeout 30 \
               --auth-mode login \
               -o json --query '[0]')

            # if there is no [0], it's null → done
            if [ "$MSG_JSON" = "null" ]; then
              echo "✅ queue is empty, exiting."
              break
            fi

            # 2) extract fields via jq
            MSG_ID=$(echo "$MSG_JSON" | jq -r '.messageId')
            POP   =$(echo "$MSG_JSON" | jq -r '.popReceipt')
            PAYLOAD=$(echo "$MSG_JSON" | jq -r '.messageText')
            IFS='|' read -r SUB_ID RG NS IP <<<"$PAYLOAD"

            echo
            echo "→ DEBUG: Removing rule $IP from $NS (RG=$RG / Sub=$SUB_ID)"

            # show before
            az servicebus namespace network-rule-set show \
              --resource-group "$RG" \
              --namespace-name "$NS" \
              --query ipRules -o table

            # 3) remove IP
            az account set -s "$SUB_ID"
            az servicebus namespace network-rule-set ip-rule remove \
              --resource-group "$RG" \
              --namespace-name "$NS" \
              --ip-rule ip-address="$IP"

            # show after
            az servicebus namespace network-rule-set show \
              --resource-group "$RG" \
              --namespace-name "$NS" \
              --query ipRules -o table

            # 4) finally delete exactly that queue message
            az storage queue message delete \
              --account-name $AZURE_STORAGE_ACCOUNT \
              --queue-name sb-whitelist \
              --message-id "$MSG_ID" \
              --pop-receipt "$POP" \
              --auth-mode login
          done
