name: Nightly SB Whitelist Cleanup

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

permissions:
  actions: read
  checks: write
  contents: read
  id-token: write
  pull-requests: read
  statuses: read

jobs:
  clean-up:
    runs-on: ubuntu-latest
    env:
      AZURE_STORAGE_ACCOUNT: poc2sbwhitelist2 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id:     ${{ secrets.CLIENTID }}
          tenant-id:     ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.subscriptionId }}

      - name: Process all queued IPs

        run: |
          # 0) install jq for JSON parsing
          sudo apt-get update && sudo apt-get install -y jq

          # peek at up to 5 messages so you can see what's in the queue
          echo ">> Queue peek:"
          az storage message peek \
            --account-name $AZURE_STORAGE_ACCOUNT \
            --queue-name sb-whitelist \
            --num-messages 5 \
            --auth-mode login \
            -o table

          # 1) loop until no more messages
          while true; do
            # fetch one message as JSON
            MSG_JSON=$(az storage message get \
              --account-name $AZURE_STORAGE_ACCOUNT \
              --queue-name sb-whitelist \
              --num-messages 1 \
              --auth-mode login \
              -o json --query '[0]')
            
            # if null, queue is empty
            if [ "$MSG_JSON" = "null" ]; then
              echo "✅ no more messages, exiting."
              break
            fi

            # 2) parse fields with jq
            MSG_ID=$(echo "$MSG_JSON" | jq -r '.messageId')
            POP=$(echo "$MSG_JSON"   | jq -r '.popReceipt')
            PAYLOAD=$(echo "$MSG_JSON" | jq -r '.messageText')

            # 3) split payload "subId|rg|namespace|ip"
            IFS='|' read -r SUB_ID RG NS IP <<< "$PAYLOAD"

            echo
            echo "----- DEBUG BEFORE REMOVE -----"
            echo "Queue messageId: $MSG_ID"
            echo "popReceipt:      $POP"
            echo "Payload -> SUB_ID=$SUB_ID, RG=$RG, NS=$NS, IP=$IP"
            echo "Current ipRules for $NS:"
            az servicebus namespace network-rule-set show \
              --resource-group "$RG" \
              --namespace-name "$NS" \
              --query ipRules -o table

            # 4) remove the IP rule
            echo "→ Removing IP rule $IP from Service Bus '$NS'…"
            az account set -s "$SUB_ID"
            az servicebus namespace network-rule-set ip-rule remove \
              --resource-group "$RG" \
              --namespace-name "$NS" \
              --ip-rule ip-address="$IP"

            # 5) delete the queue message
            echo "→ Deleting queue message $MSG_ID"
            az storage message delete \
              --account-name $AZURE_STORAGE_ACCOUNT \
              --queue-name sb-whitelist \
              --id "$MSG_ID" \
              --pop-receipt "$POP" \
              --auth-mode login
          done
