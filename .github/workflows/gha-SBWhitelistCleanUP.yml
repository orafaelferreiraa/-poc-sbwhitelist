name: Nightly SB Whitelist Cleanup

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

permissions:
  actions: read
  checks: write
  contents: read
  id-token: write
  pull-requests: read
  statuses: read

jobs:
  clean-up:
    runs-on: ubuntu-latest
    env:
      AZURE_STORAGE_ACCOUNT: poc2sbwhitelist2 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id:     ${{ secrets.CLIENTID }}
          tenant-id:     ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.subscriptionId }}

      - name: Process all queued IPs (with debug)
        run: |
          # Loop until the queue is empty
          while true; do
            # 1) Fetch the next messageId; if none, exit loop
            MSG_ID=$(az storage message get \
              --account-name $AZURE_STORAGE_ACCOUNT \
              --auth-mode login \
              --queue-name sb-whitelist \
              --num-messages 1 \
              --query '[0].messageId' \
              -o tsv)
            if [ -z "$MSG_ID" ]; then
              echo "✅ No more messages, exiting."
              break
            fi

            # 2) Fetch its popReceipt and messageText
            POP=$(az storage message get \
              --account-name $AZURE_STORAGE_ACCOUNT \
              --auth-mode login \
              --queue-name sb-whitelist \
              --num-messages 1 \
              --query '[0].popReceipt' \
              -o tsv)
            PAYLOAD=$(az storage message get \
              --account-name $AZURE_STORAGE_ACCOUNT \
              --auth-mode login \
              --queue-name sb-whitelist \
              --num-messages 1 \
              --query '[0].messageText' \
              -o tsv)

            # 3) Split payload "subscriptionId|resourceGroup|namespace|ip"
            IFS='|' read -r SUB_ID RG NS IP <<< "$PAYLOAD"

            echo
            echo "----- DEBUG BEFORE REMOVE -----"
            echo "SUB_ID:      $SUB_ID"
            echo "ResourceGrp: $RG"
            echo "Namespace:   $NS"
            echo "IP:          $IP"
            echo "Current ipRules:"
            az servicebus namespace network-rule-set show \
              --resource-group "$RG" \
              --namespace-name "$NS" \
              --query ipRules \
              -o table

            # 4) Remove the IP rule (no silent-fail)
            echo "→ Removing $IP …"
            az account set -s "$SUB_ID"
            az servicebus namespace network-rule-set ip-rule remove \
              --resource-group "$RG" \
              --namespace-name "$NS" \
              --ip-rule ip-address="$IP"

            echo
            echo "----- DEBUG AFTER REMOVE -----"
            az servicebus namespace network-rule-set show \
              --resource-group "$RG" \
              --namespace-name "$NS" \
              --query ipRules \
              -o table

            # 5) Delete that exact message from the queue
            az storage message delete \
              --account-name $AZURE_STORAGE_ACCOUNT \
              --auth-mode login \
              --queue-name sb-whitelist \
              --message-id "$MSG_ID" \
              --pop-receipt "$POP"
          done
